name: Publish docs via GitHub Pages
on:
  push:
    branches:
      - main

permissions:
  contents: write
jobs:
  build-docs:
    name: Generate docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Deploy docs to gh-pages branch (for backwards compatibility)
        uses: mhausenblas/mkdocs-deploy-gh-pages@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Generate Release
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.bump-version.outputs.tag_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Bump version
        uses: rymndhng/release-on-push-action@master
        id: bump-version
        with:
          bump_version_scheme: minor
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run latest-tag
        uses: EndBug/latest-tag@latest

  

  build-firmware:
      name: Build Firmware
      needs: release
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v5.0.0
        - name: override placeholder version
          uses: mikefarah/yq@master
          with:
            cmd: yq -i '.esphome.project.version = "${{ needs.release.outputs.tag_name }}"' 'firmware/plant-waterer.yml'
        - name: Build Firmware
          uses: esphome/build-action@v7.0.0
          id: esphome-build
          with:
            yaml-file: firmware/plant-waterer.yaml
            complete-manifest: true
        - name: Upload artifact
          uses: actions/upload-artifact@v4.6.2
          with:
            name: firmware
            path: ${{ steps.esphome-build.outputs.name }}
        - name: Release
          uses: softprops/action-gh-release@v2
          with:
            tag_name: ${{ needs.release.outputs.tag_name }}
            files: ${{ steps.esphome-build.outputs.name }}/*

  upload-to-release:
    name: Upload to Release
    uses: esphome/workflows/.github/workflows/upload-to-gh-release.yml@main
    needs:
      - release
      - build-firmware
    with:
      version:  ${{ needs.release.outputs.tag_name }}

  deploy_mkdocs:
    name: Deploy MkDocs and Firmware to GitHub Pages
    needs: [build-docs, upload-to-release]
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: gh-pages
      - run: mkdir -p firmware
      - uses: actions/download-artifact@v5
        with:
          name: firmware
          path: firmware
      - name: Display structure of downloaded files
        run: ls -R
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}